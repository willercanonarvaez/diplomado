import streamlit as st
import pandas as pd
import plotly.express as px

def show_tab():
    st.markdown("## üìâ Desempe√±o y Riesgo Educativo")
    st.caption("Analiza los indicadores clave como **deserci√≥n**, **aprobaci√≥n** y **repitencia** a nivel departamental.")

    if 'df_clean' not in st.session_state:
        st.warning("‚ö†Ô∏è Primero debes cargar y transformar los datos en la pesta√±a de Transformaci√≥n.")
        return

    df = st.session_state['df_clean']

    # Selecci√≥n de a√±o
    a√±os_disponibles = sorted(df['a_o'].unique())
    a√±o_seleccionado = st.selectbox("üìÖ Selecciona un a√±o:", a√±os_disponibles, index=len(a√±os_disponibles)-1)
    df_filtrado = df[df['a_o'] == a√±o_seleccionado]

    # Normalizar nombre largo de San Andr√©s
    df_filtrado['departamento'] = df_filtrado['departamento'].replace({
        "Archipi√©lago De San Andr√©s Providencia Y Santa Catalina": "San Andr√©s"
    })

    st.subheader("üì¶ Distribuci√≥n de la Deserci√≥n por Departamento")

    # Departamento selector interactivo (m√°x. 5 visibles en gr√°fico)
    departamentos_unicos = sorted(df_filtrado['departamento'].unique())
    departamentos_seleccionados = st.multiselect(
        "üè∑Ô∏è Selecciona hasta 5 departamentos:",
        departamentos_unicos,
        default=departamentos_unicos[:5],
        max_selections=5,
        key="select_departamentos_boxplot"
    )

    df_box = df_filtrado[df_filtrado['departamento'].isin(departamentos_seleccionados)]

    fig_box = px.box(
        df_box,
        x="departamento",
        y="deserci_n",
        points="all",
        color="departamento",
        labels={"deserci_n": "Deserci√≥n (%)"},
        title=f"Distribuci√≥n de la Deserci√≥n - A√±o {a√±o_seleccionado}"
    )
    fig_box.update_layout(showlegend=False, height=600, margin=dict(l=30, r=30, t=60, b=30))
    st.plotly_chart(fig_box, use_container_width=True)

    st.markdown("---")
    st.subheader("üìä Comparativo de Indicadores Clave por Departamento")

    st.markdown("---")
    st.subheader("üß≠ Comparativo 3D: Aprobaci√≥n, Repitencia y Reprobaci√≥n")

    # Filtrado para valores v√°lidos
    df_3d = df_filtrado[['departamento', 'aprobaci_n', 'repitencia', 'reprobaci_n']].dropna()

    fig_3d = px.scatter_3d(
        df_3d,
        x='aprobaci_n',
        y='repitencia',
        z='reprobaci_n',
        color='departamento',
        hover_name='departamento',
        title=f"üìå Indicadores Clave por Departamento - A√±o {a√±o_seleccionado}",
        labels={
            'aprobaci_n': 'Aprobaci√≥n (%)',
            'repitencia': 'Repitencia (%)',
            'reprobaci_n': 'Reprobaci√≥n (%)'
        },
        height=700
    )
    fig_3d.update_layout(margin=dict(l=0, r=0, b=0, t=40))

    st.plotly_chart(fig_3d, use_container_width=True)
